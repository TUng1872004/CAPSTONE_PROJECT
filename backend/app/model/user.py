
from __future__ import annotations
from pydantic import BaseModel, Field
from typing import Any, Type, TypeVar, Literal, Annotated, Union
from beanie import Document
from datetime import datetime
from abc import abstractmethod, ABC
from llama_index.core.base.llms.types import MessageRole

from app.core.config import settings


class User(Document):
    # user id is autogenerated by beanie
    username: str
    email: str | None = Field(default=None, description="The email of the user")
    full_name: str | None = Field(default=None, description="The full name of the user")
    google_id: str | None = Field(default=None, description="The Google ID of the user")
    picture: str | None = Field(
        default=None, description="URL to the user's profile picture"
    )
    email_verified: bool = Field(
        default=False, description="Is the user's email verified"
    )
    disabled: bool = Field(default=False, description="Is the user disabled")
    created_at: datetime = Field(
        default_factory=datetime.utcnow, description="Account creation timestamp"
    )
    last_login: datetime = Field(
        default_factory=datetime.utcnow, description="Last login timestamp"
    )
    class Settings:
        name = settings.USER_COLLECTION_NAME
        indexes = ["username", [("last_updated", -1)]]
